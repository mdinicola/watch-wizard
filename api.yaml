---
swagger: "2.0"
info:
  title: Watch Wizard
  description: API for Watch Wizard application
  version: 1.0.0
basePath: "/"
paths:
  "/config":
    get:
      summary: Config Get Function
      description: Displays the configuration details for the service
      operationId: ConfigGetFunction
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConfigGetFunction.Arn}/invocations"
      security:
        - api_key: []
  "/trakt/auth-code":
    get:
      summary: Trakt GetAuthCode Function
      description: Gets a device code to be used for authenticating with the Trakt API
      operationId: TraktGetAuthCodeFunction
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TraktGetAuthCodeFunction.Arn}/invocations"
      security:
        - api_key: []
  "/trakt/authenticate-device":
    post:
      summary: Trakt Authenticate Function
      description: Authenticates a device for use with the Trakt API
      operationId: TraktAuthenticateFunction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: device_auth_data
          description: The DeviceAuthData to use for authentication with the Trakt API
          schema:
            $ref: "#/definitions/DeviceAuthData"
      responses:
        200:
          description: Success
        404:
          description: Not found
        409:
          description: You already approved this code
        410:
          description: The tokens have expired, restart the process
        418:
          description: You explicitly denied this code
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TraktAuthenticateDeviceFunction.Arn}/invocations"
      security:
        - api_key: []
  "/plex/health":
    get:
      summary: Plex HealthCheck Function
      description: Validates connection to Plex with the configured token
      operationId: PlexHealthCheckFunction
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PlexHealthCheckFunction.Arn}/invocations"
      security:
        - api_key: []
  "/media/recommend-movie":
    get:
      summary: RecommendMovie Function
      description: Recommends a movie
      operationId: RecommendMovieFunction
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RecommendMovieFunction.Arn}/invocations"
      security:
        - api_key: []
  "/media/search":
    get:
      summary: Search Media
      description: Searches for movies and tv shows
      operationId: SearchMedia
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SearchMediaFunction.Arn}/invocations"
      security:
        - api_key: []
  "/alexa/skills":
    post:
      summary: AlexaSkills Function
      description: Handles Alexa Skills
      operationId: AlexaSkillsFunction
      produces:
        - application/json
      responses:
        200:
          description: Success
        404:
          description: Not found
        500:
          description: 500 Internal Server Error
        503:
          description: SERVICE UNAVAILABLE
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: 
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AlexaSkillsApiFunction.Arn}/invocations"
schemes:
  - https
securityDefinitions:
  api_key:
    type: apiKey
    name: x-api-key
    in: header
    x-amazon-apigateway-api-key-source: HEADER
definitions:
  DeviceAuthData:
    type: object
    required:
      - device_code
      - poll_interval
    properties:
      device_code:
        type: string
      poll_interval:
        type: integer
      user_code:
        type: string
      verification_url:
        type: string